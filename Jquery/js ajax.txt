
为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，
则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：

var xmlhttp;
if (window.XMLHttpRequest)
  {// code for IE7+, Firefox, Chrome, Opera, Safari
  xmlhttp=new XMLHttpRequest();
  }
else
  {// code for IE6, IE5
  xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
  }


var request = new XMLHttpRequest;


发送请求
open(method,url,async); 
send(string);发送

//method 	请求方式：“GET” “POST”
与 POST 相比，GET 更简单也更快，并且在大部分情况下都能用。
然而，在以下情况中，请使用 POST 请求：
无法使用缓存文件（更新服务器上的文件或数据库）
向服务器发送大量数据（POST 没有数据量限制）
发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠
//url 		请求地址
//async   	false:同步 ； true: 异步； 默认true
//string   	get 请求不用参数，post 请求用参数

request.open("POST","index.php","true");
request.setRequestHeader("Content-type","application/x-www-form-urlencoded");
request.send("name=str1&password=str2");



取得响应

responseText:获得字符串形式的响应数据
responseXML:获得XML形式的响应数据
status 和 statusText :以数字和文本形式返回HTTP状态码
getAllResponseHeader(): 获取所有的响应报头
getResponseHeader():查询响应中的某个字段的值


readystate : 	
	0 ：请求未初始化，open还没调用
	1 ：服务器连接已建立，open已经调用
	2 : 请求已接收，
	3 ：请求处理中
	4 ：请求已完成

request.onreadystatechange = function(){
	if ( request.readyState === 4 ){
		请求成功
		request.responseText
	}
}
/////////////////////////////////////////////////////////////////////////////
通过XMLHttpRequest发送post后台请求


var request = new XMLHttpRequest();
request.open("POST", "../templets/default/check/regphone_check.php");
var data = "regphone=" + regphonenumber;
request.setRequestHeader("Content-type","application/x-www-form-urlencoded");
request.send(data);
request.onreadystatechange = function() {
	if (request.readyState===4) {
    		if (request.status===200) {
    			regerrortext1.innerHTML = request.responseText;
    		} else {
    			alert("发生错误：" + request.status);
    		}
	} 
} 





	logphone = logphonenumber;
	    	var request = new XMLHttpRequest();
    		request.open("POST", "http://localhost/default/check/logphone_check.php");
    		request.setRequestHeader("Content-type","application/x-www-form-urlencoded");
    		var data = "phonenumber=" + logphonenumber ;
    		request.send(data);
    		request.onreadystatechange = function() {
    			if (request.readyState === 4) {
    				if (request.status === 200) {
    					if ( window.JSON && window.JSON.parse ){
    						var str1 = JSON.stringify(request.responseText);
    						str2 = JSON.parse(str1);
    						var str3 = str2.substr(str2.indexOf("#"));//{success:true,msg:}
    						var str = str3.split(",")[0].split("success:")[1];
    						if ( str == "true") {
    							logerror1.style.display = 'none';
    							logerror11.style.display = 'none';
        					} else {
        						var str4 = str3.split(",")[1].split("msg:")[1];
        						logerrortext1.innerHTML = str4;
        						logerror1.style.display = 'block';
        						logerror11.style.display = 'none';
        					}
    					}
    				} else {
    					alert("发生错误：" + request.status);
    				}
    			} 
    		}
	    }
	    else{
	    	logerrortext1.innerHTML = '请输入有效的11位手机号码  !';
			logerror1.style.display = 'block';
			logerror11.style.display = 'none';
	    }











